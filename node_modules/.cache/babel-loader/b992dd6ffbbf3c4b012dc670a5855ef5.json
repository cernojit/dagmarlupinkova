{"ast":null,"code":"var _jsxFileName = \"/Users/jice/Sites/dagmarLupinkova/dagmarlupinkova/src/containers/FormContainer.js\";\nimport React, { Component } from 'react';\nimport Button from '../components/Button';\nimport CheckBox from '../components/CheckBox';\nimport Input from '../components/Input';\nimport TextArea from '../components/TextArea'; // import axios from 'axios'\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      field: {\n        fname: '',\n        email: '',\n        message: ''\n      },\n      checkBox: false,\n      errors: {\n        nameError: '',\n        emailError: '',\n        messageError: ''\n      }\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.checkBoxCheck = this.checkBoxCheck.bind(this);\n  }\n\n  handleInput(event) {\n    const {\n      field\n    } = { ...this.state\n    };\n    const currentstate = field;\n    const {\n      name,\n      value\n    } = event.target;\n    currentstate[name] = value;\n    this.setState({\n      field: currentstate\n    });\n  }\n\n  checkBoxCheck(event) {\n    console.log(event.target.checked);\n\n    if (event.target.checked) {\n      this.setState({\n        checkBox: true\n      });\n    } else {\n      this.setState({\n        checkBox: false\n      });\n    }\n  }\n\n  handleClearForm() {\n    this.setState({\n      field: {\n        fname: '',\n        email: '',\n        message: ''\n      },\n      checkBox: false,\n      errors: {\n        nameError: '',\n        emailError: '',\n        messageError: ''\n      }\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const templateId = 'template_EwQhSiZR';\n    e.target.className += \" was-validated\";\n    console.log(this.state.checkBox); //  if(!window.form.checkValidity()){\n    //  \tthis.setState({displayErrors: true})\n    //  \tconsole.log('errors', this.state.displayErrors)\n    //  \treturn;\n    //  } else {\n    // this.setState({displayErrors: false})\n    //  \tconsole.log('errors', this.state.displayErrors)\n    //  \tthis.handleClearForm();\n    //  \treturn;\n    //  }\n    //   if(this.state.checkBox === false){\n    // \tthis.sendFeedback(templateId, {message_html: this.state.message, from_name: this.state.name, reply_to: this.state.email})\n    // } else {\n    // \tconsole.log('some bot tried to attack you')\n    // }\n  }\n\n  sendFeedback(templateId, variables) {\n    window.emailjs.send('cernojit_gmail_com', templateId, variables).then(res => {\n      console.log('Email successfully sent!');\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n  }\n\n  validateForm() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"needs-validation\",\n      noValidate: true,\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"template-title-example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }\n    }, \"M\\xE1te Dotaz?\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"fname\",\n      id: \"inputName\",\n      placeholder: \"Jméno a příjmení\",\n      onChange: this.handleInput,\n      value: this.state.field.name,\n      className: 'form-control',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, this.state.errors.nameError), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"inputEmail\",\n      placeholder: \"Email\",\n      onChange: this.handleInput,\n      value: this.state.field.email,\n      className: 'form-control',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, this.state.errors.emailError), /*#__PURE__*/React.createElement(TextArea, {\n      className: 'form-control',\n      placeholder: \"Napište Vaší zprávu\",\n      name: \"message\",\n      value: this.state.field.message,\n      handleChange: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CheckBox, {\n      name: 'checkBox',\n      value: this.state.checkBox,\n      handleChange: this.checkBoxCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["/Users/jice/Sites/dagmarLupinkova/dagmarlupinkova/src/containers/FormContainer.js"],"names":["React","Component","Button","CheckBox","Input","TextArea","FormContainer","constructor","props","state","field","fname","email","message","checkBox","errors","nameError","emailError","messageError","handleInput","bind","handleFormSubmit","validateField","checkBoxCheck","event","currentstate","name","value","target","setState","console","log","checked","handleClearForm","e","preventDefault","templateId","className","sendFeedback","variables","window","emailjs","send","then","res","catch","err","error","validateForm","render","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from '../components/Button';\nimport CheckBox from '../components/CheckBox';  \nimport Input from '../components/Input';  \nimport TextArea from '../components/TextArea';\n\n// import axios from 'axios'\n\nclass FormContainer extends Component {\n\tconstructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t\tfield: {\n\t\t\tfname: '', \n\t\t\temail: '', \n\t\t\tmessage: ''\n\t\t},\n  \tcheckBox: false,\n  \terrors: {\n  \t\tnameError: '',\n  \t\temailError: '',\n  \t\tmessageError: ''\n  \t}\n\t}\n\tthis.handleInput = this.handleInput.bind(this);\t\n\tthis.handleFormSubmit = this.handleFormSubmit.bind(this);\n\tthis.validateField = this.validateField.bind(this);\n\tthis.checkBoxCheck = this.checkBoxCheck.bind(this)\n  }\n\n\thandleInput(event){\n\t\tconst {field} = {...this.state}\n\t\tconst currentstate = field;\n\t\tconst {name, value} = event.target ;\n\t\tcurrentstate[name] = value;\n\t\tthis.setState({field: currentstate});\n\t}\n\n\tcheckBoxCheck(event){\n\t\tconsole.log(event.target.checked)\n\t\tif(event.target.checked){\n\t\t\tthis.setState({checkBox: true})\n\t\t} else {\n\t\t\tthis.setState({checkBox: false})\n\t\t}\n\t}\n\n\thandleClearForm(){\n\t\tthis.setState({\n\t  \tfield: {\n\t\t\tfname: '', \n\t\t\temail: '', \n\t\t\tmessage: ''\n\t\t},\n  \tcheckBox: false,\n  \terrors: {\n  \t\tnameError: '',\n  \t\temailError: '',\n  \t\tmessageError: ''\n  \t}\n\t\t})\n\t}\n\n\thandleFormSubmit(e) {\n    e.preventDefault();\n    const templateId = 'template_EwQhSiZR';\n\t\te.target.className += \" was-validated\";\n\t\tconsole.log(this.state.checkBox)\n   //  if(!window.form.checkValidity()){\n   //  \tthis.setState({displayErrors: true})\n   //  \tconsole.log('errors', this.state.displayErrors)\n   //  \treturn;\n   //  } else {\n\t\t\t// this.setState({displayErrors: false})\n   //  \tconsole.log('errors', this.state.displayErrors)\n   //  \tthis.handleClearForm();\n   //  \treturn;\n   //  }\n\n  //   if(this.state.checkBox === false){\n\t\t// \tthis.sendFeedback(templateId, {message_html: this.state.message, from_name: this.state.name, reply_to: this.state.email})\n\t\t// } else {\n\t\t// \tconsole.log('some bot tried to attack you')\n\t\t// }\n  }\n\n  sendFeedback (templateId, variables) {\n\t\twindow.emailjs.send(\n  \t'cernojit_gmail_com', templateId,\n  \tvariables\n  \t).then(res => {\n    \tconsole.log('Email successfully sent!')\n  \t})\n  \t// Handle errors here however you like, or use a React error boundary\n  \t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n\n  validateForm(){\n\n  }\n\n  render(){\n    return (\n    \t<form className=\"needs-validation\" noValidate onSubmit={this.handleFormSubmit}>\n    \t<div className='col-md-6'>\n\t\t\t <div className=\"template-example\">\n\t        <h2 className=\"template-title-example\">Máte Dotaz?</h2>\n\t        \t<Input \n\t        \t\ttype={\"text\"}\n\t        \t\tname={\"fname\"}\n\t        \t\tid={\"inputName\"}\n\t        \t\tplaceholder={\"Jméno a příjmení\"}\n\t        \t\tonChange={this.handleInput}\n\t        \t\tvalue={this.state.field.name}\n\t        \t\tclassName={'form-control'}\n\t        \t\t/>\n\t\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.errors.nameError}</span>\n\t        \t<Input \n\t        \t\ttype={\"email\"}\n\t        \t\tname={\"email\"}\n\t        \t\tid={\"inputEmail\"}\n\t        \t\tplaceholder={\"Email\"}\n\t        \t\tonChange={this.handleInput}\n\t        \t\tvalue={this.state.field.email}\n\t        \t\tclassName={'form-control'}\t        \t\t\n\t        \t\t/>\n\t\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.errors.emailError}</span>\n\t        \t<TextArea \n\t        \t\tclassName={'form-control'}\n\t        \t\tplaceholder={\"Napište Vaší zprávu\"}\n\t        \t\tname={\"message\"}\n\t        \t\tvalue={this.state.field.message}\n\t        \t\thandleChange={this.handleInput}\n\t        \t\t/>\n\t        \t<CheckBox\n\t        \t\tname={'checkBox'}\n\t        \t\tvalue={this.state.checkBox}\n\t        \t\thandleChange={this.checkBoxCheck}\n\t        \t\t/>\n\t        \t<Button\n\t        \t\t/>\n\t\t\t\t</div>\n      </div>\n      </form>\n    )\n\n  }\n}\n\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}