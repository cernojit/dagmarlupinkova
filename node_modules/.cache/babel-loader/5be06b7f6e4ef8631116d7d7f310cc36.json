{"ast":null,"code":"var _jsxFileName = \"/Users/jice/Sites/dagmarLupinkova/dagmarlupinkova/src/containers/FormContainer.js\";\nimport React, { Component } from 'react';\nimport Button from '../components/Button';\nimport CheckBox from '../components/CheckBox';\nimport Input from '../components/Input';\nimport TextArea from '../components/TextArea'; // import axios from 'axios'\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      field: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      checkBox: false,\n      errors: {\n        nameError: '',\n        emailError: '',\n        messageError: ''\n      }\n    }; // this.handleFullName = this.handleFullName.bind(this);\n    // this.handleEmail = this.handleEmail.bind(this);\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleTextBox = this.handleTextBox.bind(this); // this.checkValidity = this.checkValidity.bind(this)\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleInput(event) {\n    const {\n      field\n    } = { ...this.state\n    };\n    const currentstate = field;\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      field: event.target.value\n    });\n    currentstate[name] = value;\n    console.log('name and value:', field);\n  } // handleEmail(event){\n  // \tlet value = event.target.value;\n  // \tthis.setState({field:{[event.target.name]: value}});\n  // \tconsole.log(this.state.field)\n  //  }\n\n\n  handleTextBox(event) {\n    let value = event.target.value;\n    this.setState({\n      message: value\n    });\n  } // checkBot(event){\n  // \tif(event.target.checked === true){\n  // \t\tthis.setState({checkBox: true})\n  // \t} else {\n  // \t\tthis.setState({checkBox: false})\n  // \t}\n  // }\n\n\n  handleClearForm() {\n    this.setState({\n      name: '',\n      email: '',\n      message: '',\n      checkBox: false\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const templateId = 'template_EwQhSiZR'; //  if(!window.form.checkValidity()){\n    //  \tthis.setState({displayErrors: true})\n    //  \tconsole.log('errors', this.state.displayErrors)\n    //  \treturn;\n    //  } else {\n    // this.setState({displayErrors: false})\n    //  \tconsole.log('errors', this.state.displayErrors)\n    //  \tthis.handleClearForm();\n    //  \treturn;\n    //  }\n    //   if(this.state.checkBox === false){\n    // \tthis.sendFeedback(templateId, {message_html: this.state.message, from_name: this.state.name, reply_to: this.state.email})\n    // } else {\n    // \tconsole.log('some bot tried to attack you')\n    // }\n  }\n\n  sendFeedback(templateId, variables) {\n    window.emailjs.send('cernojit_gmail_com', templateId, variables).then(res => {\n      console.log('Email successfully sent!');\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n  }\n\n  validateField() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"needs-validation\",\n      noValidate: true,\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"template-title-example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }\n    }, \"M\\xE1te Dotaz?\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"inputName\",\n      placeholder: \"Jméno a příjmení\",\n      onChange: this.handleInput,\n      value: this.state.field.name,\n      className: 'form-control',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, this.state.errors.nameError), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"inputEmail\",\n      placeholder: \"Email\",\n      onChange: this.handleInput,\n      value: this.state.email,\n      className: 'form-control was-validated',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, this.state.errors.emailError), /*#__PURE__*/React.createElement(TextArea, {\n      placeholder: \"Napište Vaší zprávu\",\n      handleChange: this.handleTextBox,\n      value: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CheckBox, {\n      name: 'checkbox',\n      value: this.state.checkBox,\n      handleChange: this.checkValidity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button // action={this.handleClearForm}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["/Users/jice/Sites/dagmarLupinkova/dagmarlupinkova/src/containers/FormContainer.js"],"names":["React","Component","Button","CheckBox","Input","TextArea","FormContainer","constructor","props","state","field","name","email","message","checkBox","errors","nameError","emailError","messageError","handleInput","bind","handleTextBox","handleFormSubmit","validateField","event","currentstate","value","target","setState","console","log","handleClearForm","e","preventDefault","templateId","sendFeedback","variables","window","emailjs","send","then","res","catch","err","error","render","color","checkValidity"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACrCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,OAAO,EAAE;AAHH,OADK;AAMXC,MAAAA,QAAQ,EAAE,KANC;AAOXC,MAAAA,MAAM,EAAE;AACPC,QAAAA,SAAS,EAAE,EADJ;AAEPC,QAAAA,UAAU,EAAE,EAFL;AAGPC,QAAAA,YAAY,EAAE;AAHP;AAPG,KAAb,CAFmB,CAenB;AACA;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB,CAlBmB,CAmBnB;;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACE;;AAEFD,EAAAA,WAAW,CAACK,KAAD,EAAO;AACjB,UAAM;AAACd,MAAAA;AAAD,QAAU,EAAC,GAAG,KAAKD;AAAT,KAAhB;AACA,UAAMgB,YAAY,GAAGf,KAArB;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOe,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKC,QAAL,CAAc;AAAClB,MAAAA,KAAK,EAAEc,KAAK,CAACG,MAAN,CAAaD;AAArB,KAAd;AACAD,IAAAA,YAAY,CAACd,IAAD,CAAZ,GAAqBe,KAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BpB,KAA/B;AACA,GAhCoC,CAkCrC;AACA;AACA;AACA;AACA;;;AAEAW,EAAAA,aAAa,CAACG,KAAD,EAAO;AACnB,QAAIE,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaD,KAAzB;AAEA,SAAKE,QAAL,CAAc;AAACf,MAAAA,OAAO,EAAEa;AAAV,KAAd;AACA,GA5CoC,CA8CrC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAK,EAAAA,eAAe,GAAE;AAChB,SAAKH,QAAL,CAAc;AACZjB,MAAAA,IAAI,EAAE,EADM;AAEZC,MAAAA,KAAK,EAAE,EAFK;AAGZC,MAAAA,OAAO,EAAE,EAHG;AAIZC,MAAAA,QAAQ,EAAE;AAJE,KAAd;AAMA;;AAEDQ,EAAAA,gBAAgB,CAACU,CAAD,EAAI;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,UAAU,GAAG,mBAAnB,CAFiB,CAIlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;AACA;AACA;AACA;AACA;AACC;;AAEDC,EAAAA,YAAY,CAAED,UAAF,EAAcE,SAAd,EAAyB;AACrCC,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CACC,oBADD,EACuBL,UADvB,EAECE,SAFD,EAGGI,IAHH,CAGQC,GAAG,IAAI;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KALF,EAMC;AAND,KAOEY,KAPF,CAOQC,GAAG,IAAId,OAAO,CAACe,KAAR,CAAc,oEAAd,EAAoFD,GAApF,CAPf;AAQC;;AAEDpB,EAAAA,aAAa,GAAE,CACd;;AAEDsB,EAAAA,MAAM,GAAE;AACN,wBACC;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,UAAU,MAA7C;AAA8C,MAAA,QAAQ,EAAE,KAAKvB,gBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADL,eAEM,oBAAC,KAAD;AACC,MAAA,IAAI,EAAE,MADP;AAEC,MAAA,IAAI,EAAE,MAFP;AAGC,MAAA,EAAE,EAAE,WAHL;AAIC,MAAA,WAAW,EAAE,kBAJd;AAKC,MAAA,QAAQ,EAAE,KAAKH,WALhB;AAMC,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAAX,CAAiBC,IANzB;AAOC,MAAA,SAAS,EAAE,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,eAWE;AAAM,MAAA,KAAK,EAAE;AAACmC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKrC,KAAL,CAAWM,MAAX,CAAkBC,SAAhD,CAXF,eAYM,oBAAC,KAAD;AACC,MAAA,IAAI,EAAE,OADP;AAEC,MAAA,IAAI,EAAE,OAFP;AAGC,MAAA,EAAE,EAAE,YAHL;AAIC,MAAA,WAAW,EAAE,OAJd;AAKC,MAAA,QAAQ,EAAE,KAAKG,WALhB;AAMC,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWG,KANnB;AAOC,MAAA,SAAS,EAAE,4BAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZN,eAqBE;AAAM,MAAA,KAAK,EAAE;AAACkC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKrC,KAAL,CAAWM,MAAX,CAAkBE,UAAhD,CArBF,eAsBM,oBAAC,QAAD;AACC,MAAA,WAAW,EAAE,qBADd;AAEC,MAAA,YAAY,EAAE,KAAKI,aAFpB;AAGC,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWI,OAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBN,eA2BM,oBAAC,QAAD;AACC,MAAA,IAAI,EAAE,UADP;AAEC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,QAFnB;AAGC,MAAA,YAAY,EAAE,KAAKiC,aAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BN,eAiCM,oBAAC,MAAD,CACC;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCN,CADC,CADA,CADD;AA4CD;;AAhJmC;;AAmJtC,eAAezC,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport Button from '../components/Button';\nimport CheckBox from '../components/CheckBox';  \nimport Input from '../components/Input';  \nimport TextArea from '../components/TextArea';\n\n// import axios from 'axios'\n\nclass FormContainer extends Component {\n\tconstructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t\tfield: {\n\t\t\tname: '', \n\t\t\temail: '', \n\t\t\tmessage: ''\n\t\t},\n  \tcheckBox: false,\n  \terrors: {\n  \t\tnameError: '',\n  \t\temailError: '',\n  \t\tmessageError: ''\n  \t}\n\t}\n\t// this.handleFullName = this.handleFullName.bind(this);\n\t// this.handleEmail = this.handleEmail.bind(this);\n\tthis.handleInput = this.handleInput.bind(this);\t\n\tthis.handleTextBox = this.handleTextBox.bind(this);\n\t// this.checkValidity = this.checkValidity.bind(this)\n\tthis.handleFormSubmit = this.handleFormSubmit.bind(this);\n\tthis.validateField = this.validateField.bind(this)\n  }\n\n\thandleInput(event){\n\t\tconst {field} = {...this.state}\n\t\tconst currentstate = field;\n\t\tconst {name, value} = event.target ;\n\t\tthis.setState({field: event.target.value});\n\t\tcurrentstate[name] = value;\n\t\tconsole.log('name and value:', field  )\n\t}\n\n\t// handleEmail(event){\n\t// \tlet value = event.target.value;\n\t// \tthis.setState({field:{[event.target.name]: value}});\n\t// \tconsole.log(this.state.field)\n //  }\n\n\thandleTextBox(event){\n\t\tlet value = event.target.value;\n\n\t\tthis.setState({message: value});\n\t}\n\n\t// checkBot(event){\n\t// \tif(event.target.checked === true){\n\t// \t\tthis.setState({checkBox: true})\n\t// \t} else {\n\t// \t\tthis.setState({checkBox: false})\n\t// \t}\n\t// }\n\n\thandleClearForm(){\n\t\tthis.setState({\n\t  \tname: '',\n\t  \temail: '',\n\t  \tmessage: '',\n\t  \tcheckBox: false\n\t\t})\n\t}\n\n\thandleFormSubmit(e) {\n    e.preventDefault();\n    const templateId = 'template_EwQhSiZR';\n    \n   //  if(!window.form.checkValidity()){\n   //  \tthis.setState({displayErrors: true})\n   //  \tconsole.log('errors', this.state.displayErrors)\n   //  \treturn;\n   //  } else {\n\t\t\t// this.setState({displayErrors: false})\n   //  \tconsole.log('errors', this.state.displayErrors)\n   //  \tthis.handleClearForm();\n   //  \treturn;\n   //  }\n\n  //   if(this.state.checkBox === false){\n\t\t// \tthis.sendFeedback(templateId, {message_html: this.state.message, from_name: this.state.name, reply_to: this.state.email})\n\t\t// } else {\n\t\t// \tconsole.log('some bot tried to attack you')\n\t\t// }\n  }\n\n  sendFeedback (templateId, variables) {\n\t\twindow.emailjs.send(\n  \t'cernojit_gmail_com', templateId,\n  \tvariables\n  \t).then(res => {\n    \tconsole.log('Email successfully sent!')\n  \t})\n  \t// Handle errors here however you like, or use a React error boundary\n  \t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n\n  validateField(){\n  }\n\n  render(){\n    return (\n    \t<form className=\"needs-validation\" noValidate onSubmit={this.handleFormSubmit}>\n    \t<div className='col-md-6'>\n\t\t\t <div className=\"template-example\">\n\t        <h2 className=\"template-title-example\">Máte Dotaz?</h2>\n\t        \t<Input \n\t        \t\ttype={\"text\"}\n\t        \t\tname={\"name\"}\n\t        \t\tid={\"inputName\"}\n\t        \t\tplaceholder={\"Jméno a příjmení\"}\n\t        \t\tonChange={this.handleInput}\n\t        \t\tvalue={this.state.field.name}\n\t        \t\tclassName={'form-control'}\n\t        \t\t/>\n\t\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.errors.nameError}</span>\n\t        \t<Input \n\t        \t\ttype={\"email\"}\n\t        \t\tname={\"email\"}\n\t        \t\tid={\"inputEmail\"}\n\t        \t\tplaceholder={\"Email\"}\n\t        \t\tonChange={this.handleInput}\n\t        \t\tvalue={this.state.email}\n\t        \t\tclassName={'form-control was-validated'}\t        \t\t\n\t        \t\t/>\n\t\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.errors.emailError}</span>\n\t        \t<TextArea \n\t        \t\tplaceholder={\"Napište Vaší zprávu\"}\n\t        \t\thandleChange={this.handleTextBox}\n\t        \t\tvalue={this.state.message}\n\t        \t\t/>\n\t        \t<CheckBox\n\t        \t\tname={'checkbox'}\n\t        \t\tvalue={this.state.checkBox}\n\t        \t\thandleChange={this.checkValidity}\n\t        \t\t\n\t        \t\t/>\n\t        \t<Button\n\t        \t\t// action={this.handleClearForm}\n\t        \t\t/>\n\t\t\t\t</div>\n      </div>\n      </form>\n    )\n\n  }\n}\n\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}