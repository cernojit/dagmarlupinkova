{"ast":null,"code":"var _jsxFileName = \"/Users/jice/Sites/dagmarLupinkova/dagmarlupinkova/src/containers/FormContainer.js\";\nimport React, { Component } from 'react';\nimport Button from '../components/Button';\nimport CheckBox from '../components/CheckBox';\nimport Input from '../components/Input';\nimport TextArea from '../components/TextArea'; // import axios from 'axios'\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      checkBox: false,\n      // displayErrors: false,\n      nameError: '',\n      emailError: false,\n      messageError: false,\n      displayErrors: {\n        name: false,\n        email: false,\n        textbox: false\n      }\n    };\n    this.handleFullName = this.handleFullName.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleTextBox = this.handleTextBox.bind(this); // this.checkValidity = this.checkValidity.bind(this)\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.validateField = this.validateField.bind(this);\n  }\n\n  handleFullName(event) {\n    let value = event.target.value;\n    this.validateField(event.target.name, {\n      value\n    });\n    this.setState({\n      name: value\n    });\n  }\n\n  handleEmail(event) {\n    let value = event.target.value;\n    this.setState({\n      email: value\n    });\n  }\n\n  handleTextBox(event) {\n    let value = event.target.value;\n    this.setState({\n      message: value\n    });\n  } // checkBot(event){\n  // \tif(event.target.checked === true){\n  // \t\tthis.setState({checkBox: true})\n  // \t} else {\n  // \t\tthis.setState({checkBox: false})\n  // \t}\n  // }\n\n\n  handleClearForm() {\n    this.setState({\n      name: '',\n      email: '',\n      message: '',\n      checkBox: false\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const templateId = 'template_EwQhSiZR';\n    validateField('name', this.state.name); //  if(!window.form.checkValidity()){\n    //  \tthis.setState({displayErrors: true})\n    //  \tconsole.log('errors', this.state.displayErrors)\n    //  \treturn;\n    //  } else {\n    // this.setState({displayErrors: false})\n    //  \tconsole.log('errors', this.state.displayErrors)\n    //  \tthis.handleClearForm();\n    //  \treturn;\n    //  }\n    //   if(this.state.checkBox === false){\n    // \tthis.sendFeedback(templateId, {message_html: this.state.message, from_name: this.state.name, reply_to: this.state.email})\n    // } else {\n    // \tconsole.log('some bot tried to attack you')\n    // }\n  }\n\n  sendFeedback(templateId, variables) {\n    window.emailjs.send('cernojit_gmail_com', templateId, variables).then(res => {\n      console.log('Email successfully sent!');\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n  }\n\n  validateField(fieldName, {\n    value\n  }) {\n    console.log('fieldName input: ', fieldName);\n    console.log('fieldName input value: ', value);\n\n    switch (fieldName) {\n      case 'name':\n        value.length > 0 ? this.setState({\n          nameError: ''\n        }) : this.setState({\n          nameError: 'Zadejte Vaše jméno a příjmení'\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"\",\n      noValidate: true,\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"template-example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"template-title-example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 10\n      }\n    }, \"M\\xE1te Dotaz?\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"inputName\",\n      name: \"name\",\n      placeholder: \"Jméno a příjmení\",\n      onChange: this.handleFullName,\n      value: this.state.name,\n      className: 'form-control',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, this.state.nameError), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      id: \"inputEmail\",\n      placeholder: \"Email\",\n      onChange: this.handleEmail,\n      value: this.state.email,\n      className: 'form-control',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextArea, {\n      placeholder: \"Napište Vaší zprávu\",\n      handleChange: this.handleTextBox,\n      value: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CheckBox, {\n      name: 'checkbox',\n      value: this.state.checkBox,\n      handleChange: this.checkValidity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button // action={this.handleClearForm}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default FormContainer;","map":{"version":3,"sources":["/Users/jice/Sites/dagmarLupinkova/dagmarlupinkova/src/containers/FormContainer.js"],"names":["React","Component","Button","CheckBox","Input","TextArea","FormContainer","constructor","props","state","name","email","message","checkBox","nameError","emailError","messageError","displayErrors","textbox","handleFullName","bind","handleEmail","handleTextBox","handleFormSubmit","validateField","event","value","target","setState","handleClearForm","e","preventDefault","templateId","sendFeedback","variables","window","emailjs","send","then","res","console","log","catch","err","error","fieldName","length","render","color","checkValidity"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from '../components/Button';\nimport CheckBox from '../components/CheckBox';  \nimport Input from '../components/Input';  \nimport TextArea from '../components/TextArea';\n// import axios from 'axios'\n\nclass FormContainer extends Component {\n\tconstructor(props) {\n\tsuper(props);\n\tthis.state = {\n  \tname: '',\n  \temail: '',\n  \tmessage: '',\n  \tcheckBox: false,\n  \t// displayErrors: false,\n  \tnameError: '',\n  \temailError: false,\n  \tmessageError: false,\n  \tdisplayErrors: {name: false, email: false, textbox: false}\n\t}\n\tthis.handleFullName = this.handleFullName.bind(this);\n\tthis.handleEmail = this.handleEmail.bind(this);\n\tthis.handleTextBox = this.handleTextBox.bind(this);\n\t// this.checkValidity = this.checkValidity.bind(this)\n\tthis.handleFormSubmit = this.handleFormSubmit.bind(this);\n\tthis.validateField = this.validateField.bind(this)\n  }\n\n\thandleFullName(event){\n\t\tlet value = event.target.value;\n\t\tthis.validateField(event.target.name, {value});\n\t\tthis.setState({name: value}) ;\n\t}\n\n\thandleEmail(event){\n\t\tlet value = event.target.value;\n\t\tthis.setState({email: value});\n  }\n\n\thandleTextBox(event){\n\t\tlet value = event.target.value;\n\n\t\tthis.setState({message: value});\n\t}\n\n\t// checkBot(event){\n\t// \tif(event.target.checked === true){\n\t// \t\tthis.setState({checkBox: true})\n\t// \t} else {\n\t// \t\tthis.setState({checkBox: false})\n\t// \t}\n\t// }\n\n\thandleClearForm(){\n\t\tthis.setState({\n\t  \tname: '',\n\t  \temail: '',\n\t  \tmessage: '',\n\t  \tcheckBox: false\n\t\t})\n\t}\n\n\thandleFormSubmit(e) {\n    e.preventDefault();\n    const templateId = 'template_EwQhSiZR';\n    validateField('name', this.state.name)\n   //  if(!window.form.checkValidity()){\n   //  \tthis.setState({displayErrors: true})\n   //  \tconsole.log('errors', this.state.displayErrors)\n   //  \treturn;\n   //  } else {\n\t\t\t// this.setState({displayErrors: false})\n   //  \tconsole.log('errors', this.state.displayErrors)\n   //  \tthis.handleClearForm();\n   //  \treturn;\n   //  }\n\n  //   if(this.state.checkBox === false){\n\t\t// \tthis.sendFeedback(templateId, {message_html: this.state.message, from_name: this.state.name, reply_to: this.state.email})\n\t\t// } else {\n\t\t// \tconsole.log('some bot tried to attack you')\n\t\t// }\n  }\n\n  sendFeedback (templateId, variables) {\n\t\twindow.emailjs.send(\n  \t'cernojit_gmail_com', templateId,\n  \tvariables\n  \t).then(res => {\n    \tconsole.log('Email successfully sent!')\n  \t})\n  \t// Handle errors here however you like, or use a React error boundary\n  \t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n\n  validateField(fieldName, {value}){\n\t\tconsole.log('fieldName input: ', fieldName);\n\t\tconsole.log('fieldName input value: ', value);\n\n  \tswitch (fieldName){\n  \t\tcase 'name':\n  \t\t\t(value.length > 0) ? this.setState({nameError: ''}) : \n  \t\t\t\tthis.setState({nameError: 'Zadejte Vaše jméno a příjmení'});\n  \t\t\tbreak;\n  \t\tdefault:\n  \t\t\tbreak;\n  \t}\n\n  }\n\n  render(){\n    return (\n    \t<form className=\"\"  noValidate onSubmit={this.handleFormSubmit}>\n    \t<div className='col-md-6'>\n\t\t\t <div className=\"template-example\">\n\t        <h2 className=\"template-title-example\">Máte Dotaz?</h2>\n\t        \t<Input \n\t        \t\ttype={\"text\"}\n\t        \t\tid={\"inputName\"}\n\t        \t\tname=\"name\"\n\t        \t\tplaceholder={\"Jméno a příjmení\"}\n\t        \t\tonChange={this.handleFullName}\n\t        \t\tvalue={this.state.name}\n\t        \t\tclassName={'form-control'}\n\t        \t\t/>\n\t\t\t\t\t\t<span style={{color: \"red\"}}>{this.state.nameError}</span>\n\t        \t<Input \n\t        \t\ttype={\"email\"}\n\t        \t\tid={\"inputEmail\"}\n\t        \t\tplaceholder={\"Email\"}\n\t        \t\tonChange={this.handleEmail}\n\t        \t\tvalue={this.state.email}\n\t        \t\tclassName={'form-control'}\t        \t\t\n\t        \t\t/>\n\t        \t<TextArea \n\t        \t\tplaceholder={\"Napište Vaší zprávu\"}\n\t        \t\thandleChange={this.handleTextBox}\n\t        \t\tvalue={this.state.message}\n\t        \t\t/>\n\t        \t<CheckBox\n\t        \t\tname={'checkbox'}\n\t        \t\tvalue={this.state.checkBox}\n\t        \t\thandleChange={this.checkValidity}\n\t        \t\t\n\t        \t\t/>\n\t        \t<Button\n\t        \t\t// action={this.handleClearForm}\n\t        \t\t/>\n\t\t\t\t</div>\n      </div>\n      </form>\n    )\n\n  }\n}\n\nexport default FormContainer;"]},"metadata":{},"sourceType":"module"}